1.算数运算符	+  -  *  /  %  ++  --
  %运算符结果的符号只和左边有关系,与右边无关
  例:-3%2 = -1	-3%-2 = -1	3%-2 = 1
	public static void main(String[] args) {
        	int a = 10;
        	int b = ++a + --a + a++;
        	System.out.printf("%d,%d\n", a, b);		//11,31
    	}



2.赋值运算符	=  +=  -=  *=  /=  %=



3.关系(比较,条件)运算符	==  !=  >  >=  <  <=
	boolean b = (10 == 20);			//false
	boolean d = (10>20)? false:true;	//true 注意区别



4.逻辑运算符	&  |  ^  !  &&  ||	(与,或,异或,非,短路与,短路或)(&&短路与,只要前面假,后面不运算跳过)

     例:
	int a =10,b=20,c=30;
	(a < b) && (b < c)	//true	boolean类型的时候
	
	6&3		//2	这儿是位运算符
	6^3		//5	^ 异或(不是次幂,注意)
	5^10^10=5;	//5	一个数异或另外一个数2次,值是原数

	!true = false;
	!!true = true;




5.位运算符	&  |  ^  ~  >>  >>>  <<		~(按位取反)
  例:  
  >>	正数:最高位0,补0.只能移成★>=0的正数★	 	负数:最高位1,补1.(★永远<=-1★)

  <<	正数可能移成★正数,负数,0★		负数可能移成★正数,负数,0★

  >>>	无符号右移,左边全部补0		不管是正数还是负数,>>>结果★全是正数,0★

  最有效率算出2x8	2<<3



6.三目运算符	(关系表达式)? 表达式1:表达式2;
boolean a = (10 > 20);
boolean b = (10 > 20) ? true : false;
int c = (10 > 20) ? 10 : 20;


